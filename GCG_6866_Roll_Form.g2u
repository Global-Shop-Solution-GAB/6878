Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("GCG 6866 Roll Form")
Gui.Form..Size(1024,720)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.dtp1.Create(DatePicker)
Gui.Form.dtp1.Enabled(True)
Gui.Form.dtp1.Visible(True)
Gui.Form.dtp1.Zorder(0)
Gui.Form.dtp1.Size(100,20)
Gui.Form.dtp1.Position(7,8)
Gui.Form.dtp1.CheckBox(False)
Gui.Form.dtp1.FontName("Tahoma")
Gui.Form.dtp1.FontSize(8.25)
Gui.Form.dtp2.Create(DatePicker)
Gui.Form.dtp2.Enabled(True)
Gui.Form.dtp2.Visible(True)
Gui.Form.dtp2.Zorder(0)
Gui.Form.dtp2.Size(100,20)
Gui.Form.dtp2.Position(112,9)
Gui.Form.dtp2.CheckBox(False)
Gui.Form.dtp2.FontName("Tahoma")
Gui.Form.dtp2.FontSize(8.25)
Gui.Form.cmdRefresh.Create(Button)
Gui.Form.cmdRefresh.Enabled(True)
Gui.Form.cmdRefresh.Visible(True)
Gui.Form.cmdRefresh.Zorder(0)
Gui.Form.cmdRefresh.Size(75,23)
Gui.Form.cmdRefresh.Position(215,7)
Gui.Form.cmdRefresh.Caption("Refresh")
Gui.Form.cmdRefresh.FontName("Tahoma")
Gui.Form.cmdRefresh.FontSize(8.25)
Gui.Form.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.Form.GsGcDisplay.Create(GsGridControl)
Gui.Form.GsGcDisplay.Enabled(True)
Gui.Form.GsGcDisplay.Visible(True)
Gui.Form.GsGcDisplay.Zorder(0)
Gui.Form.GsGcDisplay.Size(1010,651)
Gui.Form.GsGcDisplay.Position(8,34)
Gui.Form.GsGcDisplay.Anchor(15)
Gui.Form.cmdExport.Create(Button)
Gui.Form.cmdExport.Enabled(True)
Gui.Form.cmdExport.Visible(True)
Gui.Form.cmdExport.Zorder(0)
Gui.Form.cmdExport.Size(75,23)
Gui.Form.cmdExport.Position(294,7)
Gui.Form.cmdExport.Caption("Export")
Gui.Form.cmdExport.FontName("Tahoma")
Gui.Form.cmdExport.FontSize(8.25)
Gui.Form.cmdExport.Event(Click,cmdExport_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
v.Local.sPassedDates.Declare
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.If(v.Caller.Switches.Trim, <>, "")
	f.Intrinsic.String.Split(v.Caller.Switches, "!*!", v.Local.sPassedDates)
	gui.Form.dtp1.Value(v.Local.sPassedDates(0))
	gui.Form.dtp2.Value(v.Local.sPassedDates(1))
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.CallSub(createDisplayDT)
f.Intrinsic.Control.CallSub(loadGridProperties)
f.Intrinsic.Control.CallSub(cmdRefresh_Click)
gui.Form..Show
Program.Sub.Main.End

Program.Sub.cmdExport_Click.Start
v.Local.iCnt.Declare
v.Local.sFolderLoc.Declare
v.Local.sFolderDes.Declare
v.Local.sFQPLoc.Declare
v.Local.sFQPDest.Declare
v.Local.sName.Declare
v.Local.sFullName.Declare
v.Local.sSQL.Declare

v.Local.sJob.Declare
v.Local.sSuf.Declare
v.Local.sSeq.Declare
v.Local.dDueDate.Declare
v.Local.sFGPart.Declare
v.Local.fQty.Declare

v.Local.sText.Declare
v.Local.sLines.Declare
v.Local.sTemp.Declare
v.Local.sLinesTemp.Declare

v.Local.sPON.Declare
v.Local.sPN.Declare
f.Intrinsic.Control.Try
	'Get Folders
	f.ODBC.Connection!con.OpenCompanyConnection
		f.ODBC.Connection!con.ExecuteAndReturn("Select top 1 FileLoc from GCG_6866_Settings", v.Local.sFolderLoc)
		f.ODBC.Connection!con.ExecuteAndReturn("Select top 1 FileDest from GCG_6866_Settings", v.Local.sFolderDes)
	f.ODBC.Connection!con.Close
	'Loop Through selected Rows
	f.Data.DataView.Create("displayDT", "selectedDV", 22, "Selected = 'True'", )
	'Copy files
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataView.displayDT!selectedDV.RowCount--, 1)
		'GEt info
		v.Local.sJob.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Job!FieldValTrim)
		v.Local.sSuf.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Suffix!FieldValTrim)
		v.Local.sSeq.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Seq!FieldValTrim)
		v.Local.dDueDate.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).date_due!FieldValTrim)
		v.Local.sFGPart.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).FG_Part!FieldValTrim)
		v.Local.fQty.Set(v.DataView.displayDT!selectedDV(v.Local.iCnt).Qty!FieldVal)
		'Blank Space
		f.Intrinsic.String.Build("{0}-{1}", v.Local.sJob, v.Local.sSuf, v.Local.sPON)
		f.Intrinsic.String.RPad(v.Local.sPON, " ", 9, v.Local.sPON)
		f.Intrinsic.String.RPad(v.Local.sJob, " ", 6, v.Local.sPN)
		'add File names
		f.Intrinsic.String.Replace(v.Local.sFGPart.Trim, " ", "", v.Local.sName)
		f.Intrinsic.String.Build("{0}-{1}-{2}", v.Local.sName, v.Local.sJob, v.Local.sSuf, v.Local.sFullName)
		f.Intrinsic.String.Build("{0}\{1}.xml", v.Local.sFolderLoc.Trim, v.Local.sName.Trim, v.Local.sFQPLoc)
		f.Intrinsic.String.Build("{0}\{1}.xml", v.Local.sFolderDes.Trim, v.Local.sFullName.Trim, v.Local.sFQPDest)
		'Get Lines
		f.Intrinsic.File.File2String(v.Local.sFQPLoc, v.Local.sText)
		f.Intrinsic.String.Split(v.Local.sText, v.Ambient.NewLine, v.Local.sLines)
		f.Intrinsic.String.Build("<Order PurchaseOrderNumber={0}{1}{0} PNumber={0}{2}{0} DueDate={0}{3}{0}>", v.Ambient.DblQuote, v.Local.sPON, v.Local.sPN, v.Local.dDueDate, v.Local.sLines(2))
		f.Intrinsic.String.Join(v.Local.sLines, v.Ambient.NewLine, v.Local.sText)
		'Piecemark
		f.Intrinsic.String.Build("PieceMark={0}", v.Ambient.DblQuote, v.Local.sTemp)
		f.Intrinsic.String.Split(v.Local.sText, v.Local.sTemp, v.Local.sLines)
		f.Intrinsic.String.Build("{0}{3}{1}{2}", v.Local.sLines(0), v.Local.sName, v.Local.sLines(1), v.Local.sTemp, v.Local.sText)
		'Qty
		f.Intrinsic.String.Build("RequestedQty={0}", v.Ambient.DblQuote, v.Local.sTemp)
		f.Intrinsic.String.Split(v.Local.sText, v.Local.sTemp, v.Local.sLines)
		f.Intrinsic.String.Split(v.Local.sLines(1), v.Ambient.DblQuote, v.Local.sLinesTemp)
		v.Local.sLinesTemp(0).Set("")
		f.Intrinsic.String.Join(v.Local.sLinesTemp, v.Ambient.DblQuote, v.Local.sLines(1))
		f.Intrinsic.String.Build("{0}{3}{1}{2}", v.Local.sLines(0), v.Local.fQty, v.Local.sLines(1), v.Local.sTemp, v.Local.sText)
		f.Intrinsic.File.String2File(v.Local.sFQPDest, v.Local.sText)
		'Set Flag
		f.Data.DataView.SetValue("displayDT", "selectedDV", v.Local.iCnt, "Exported", "Y")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	'Accept Changes and Save
	f.Data.DataTable.AcceptChanges("displayDT")
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataView.ToDataTableDistinct("displayDT", "displayDV", "saveDT", "JSS*!*Exported")
		f.Data.DataTable.AcceptChanges("saveDT")
		f.Data.DataTable.SaveToDB("saveDT", "con", "GCG_6866_RollExported", "JSS", 256)
		f.Data.DataTable.Close("saveDT")
	f.ODBC.Connection!con.Close
	'Copy Files
	f.Data.DataView.Close("displayDT", "selectedDV")
	f.Intrinsic.UI.Msgbox("Export Finished.")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.Try
	'End Program.
	f.Intrinsic.Control.End
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Form_UnLoad.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_6866_Roll_Form.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.cmdRefresh_Click.Start
v.Local.dStart.Declare
v.Local.dEnd.Declare
v.Local.sSQL.Declare
v.Local.sWC.Declare
f.Intrinsic.Control.Try
	'Get Settings.
	f.Intrinsic.Control.If(v.DataTable.dtSettings.Exists)
		f.Data.DataTable.Close("dtSettings")
	f.Intrinsic.Control.EndIf
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataTable.CreateFromSQL("dtSettings", "con", "Select * from GCG_6866_Settings", True)
	f.ODBC.Connection!con.Close
	'Check Settings are set.
	f.Intrinsic.Control.If(v.DataTable.dtSettings.RowCount, <>, 1)
		f.Intrinsic.UI.Msgbox("Please check the settings")
		f.Data.DataTable.Close("dtSettings")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	'Get Date
	v.Local.dStart.Set(v.Screen.Form!dtp1.Value)
	v.Local.dEnd.Set(v.Screen.Form!dtp2.Value)
	'Get WC from settings.
	v.Local.sWC.Set(v.DataTable.dtSettings(0).WC!FieldValTrim)
	'Pull WO
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select a.Job, a.Suffix, a.Seq, b.Part as FG_Part, b.Description as FG_Desc, b.Qty_order as Qty, '' as Released, a.date_due, b.customer, b.Customer_po, a.Part as WC, a.Job+a.Suffix as js, a.job+a.suffix+a.seq as jss from V_Job_Operations A left join V_Job_Header b on a.job = b.job and a.suffix = b.suffix where a.date_start >= '{0}' and a.date_start <= '{1}' and a.part = '{2}'", v.Local.dStart.PervasiveDate, v.Local.dEnd.PervasiveDate, v.Local.sWC, v.Local.sSQL)
		f.Data.DataTable.CreateFromSQL("tmpDT", "con", v.Local.sSQL)
		
		f.Data.Dictionary.CreateFromSQL("exportDict", "con", "Select * from GCG_6866_RollExported")
		f.Data.Dictionary.SetDefaultReturn("exportDict", " ")
	f.ODBC.Connection!con.Close
	
	f.Data.DataTable.DeleteRow("displayDT")
	f.Data.DataTable.AcceptChanges("displayDT")
	f.Data.DataTable.Merge("tmpDT", "displayDT", false, 2)
	f.Data.DataTable.AcceptChanges("displayDT")
	f.Data.DataTable.Close("tmpDT")
	f.Data.DataTable.FillFromDictionary("displayDT", "exportDict", "jss", "Exported")
	f.Data.DataTable.AcceptChanges("displayDT")
	f.Data.Dictionary.Close("exportDict")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.createDisplayDT.Start
f.Intrinsic.Control.Try
	f.Data.DataTable.Create("displayDT", true)
	f.Data.DataTable.AddColumn("displayDT", "Selected", "Boolean", False)
	f.Data.DataTable.AddColumn("displayDT", "Exported", "String")
	f.Data.DataTable.AddColumn("displayDT", "Job", "String")
	f.Data.DataTable.AddColumn("displayDT", "Suffix", "String")
	f.Data.DataTable.AddColumn("displayDT", "Seq", "String")
	f.Data.DataTable.AddColumn("displayDT", "FG_Part", "String")
	f.Data.DataTable.AddColumn("displayDT", "FG_Desc", "String")
	f.Data.DataTable.AddColumn("displayDT", "Qty", "Float")
	f.Data.DataTable.AddColumn("displayDT", "Released", "String")
	f.Data.DataTable.AddColumn("displayDT", "date_due", "Date")
	f.Data.DataTable.AddColumn("displayDT", "customer", "String")
	f.Data.DataTable.AddColumn("displayDT", "Customer_po", "String")
	f.Data.DataTable.AddColumn("displayDT", "WC", "String")
	f.Data.DataTable.AddColumn("displayDT", "js", "String")
	f.Data.DataTable.AddColumn("displayDT", "jss", "String")

	f.Data.DataView.Create("displayDT", "displayDV", 22)
	gui.Form.GsGcDisplay.AddGridviewFromDataview("displayGV", "displayDT", "displayDV")
	gui.Form.GsGcDisplay.MainView("displayGV")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createDisplayDT.End

Program.Sub.loadGridProperties.Start
v.Local.iCnt.Declare
v.Local.sFields.Declare
v.Local.iVisibleIndex.Declare

f.Intrinsic.Control.Try
	f.Intrinsic.String.Split(v.DataTable.displayDT.FieldNames, "*!*", v.Local.sFields)
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "Visible", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Near")
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderBackColor", v.Color.GSS)
		gui.Form.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderForeColor", v.Color.White)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'GridView Properties
	gui.Form.GsGcDisplay.BestFitColumns("displayGV")
	gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewColumnAutoWidth", False)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewShowAutoFilterRow", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsFindAlwaysVisible", True)
	'gui.Form.GsGcDisplay.SetGridviewProperty("displayGV", "Showgrouppanel", True)
	
	'Possible Column Properties 
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "ReadOnly", False)
	gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Selected", "AllowEdit", True)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "HeaderHAlignment", "Center")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "CellHAlignment", "Center")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "Caption", "Default")
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "Visible", False)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "DisplayCustomDatetime", "d")
	
	'VisibleIndex
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex)
	'gui.Form.GsGcDisplay.SetColumnProperty("displayGV", "Default", "VisibleIndex", v.Local.iVisibleIndex.++)
	
	'Conditional Formatting
	'gui.Form.GsGcDisplay.AddStyleFormatCondition("displayGV", "columnName", "TagName", "EQUAL", 1)
	'gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "ApplyToRow", True) 
	'gui.Form.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "BackColor", "Color") 
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadGridProperties.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$aanazco$}$20230301015911335$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOznkVKsqAETscpasxQECl8Z7ohUZ04sGkuVTRQTUrXrjw=
Program.Sub.Comments.End